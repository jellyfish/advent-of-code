#!/usr/bin/env ruby

require 'cli/ui'
require 'fileutils'
require 'net/http'
require 'nokogiri'
require 'json'

require_relative 'utils/file_manager'

require 'pry-byebug'

# Example usage:
#   ./setup <year> <day>
#   ./setup 2022 1

class Setup
  class << self
    def run
      year, day = validate_args
      setup_day(year, day)
    end

    private

    def setup_day(year, day)

    end

    def validate_args
      raise "Invalid input. Pass a year and a day number. Ex: `./setup 2022 1`" if ARGV.count != 2

      year = ARGV[0].to_i
      day = ARGV[1].to_i

      raise "Invalid year input" unless valid_year?(year)
      raise "Invalid day input" unless valid_day?(year, day)

      [year, day]
    end

    def valid_year?(year)
      year <= Time.now.year
    end

    def valid_day?(year, day)
      day >= 1 && day <= 25 && Time.new(year, 12, day) < Time.now
    end
  end
end

class AdventOfCode
  class << self
    URL = 'adventofcode.com'

    def get_input(year, day)
      server.get("/#{year}/day/#{day}/input", headers).body
    end

    private

    def server
      @server ||= Net::HTTP.start(URL, 443, use_ssl: true)
    end

    def headers
      @headers ||= {
        'Cookie' => "session=#{session}",
        'User-Agent' => 'https://github.com/jellyfish/advent-of-code/blob/main/setup by splant.10@gmail.com',
      }
    end

    def session
      @session ||= begin
        decrypted = `ejson decrypt #{File.join(FileManager.root_directory, 'secrets.ejson')}`
        JSON.parse(decrypted)["session"]
      end
    end
  end
end

Setup.run
